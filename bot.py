from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

TOKEN = 

TEXTS = {
    "skills": "–ù–∞–≤—ã–∫–∏:\n- –†—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (Web, Mobile)\n- –¢–µ—Å—Ç-–¥–∏–∑–∞–π–Ω\n- API —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n- SQL, HTML, CSS (–±–∞–∑–æ–≤–æ)\n- DevTools, Jira, Miro\n- Scrum, Kanban",
    "experience": "–û–ø—ã—Ç:\n- Junior QA Engineer (—É—á–µ–±–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã)\n- –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π —Ä–∞–±–æ—Ç–Ω–∏–∫: –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö, —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤",
    "education": "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:\n- –û–º—Å–∫–∏–π –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ö–æ–ª–ª–µ–¥–∂\n- –ò–Ω—Å—Ç–∏—Ç—É—Ç –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö —Å–≤—è–∑–µ–π (–Ω–µ–æ–∫–æ–Ω—á–µ–Ω–Ω–æ–µ)\n- QA Studio, SkillBox (–¥–æ–ø. –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ)",
    "contacts": "–ö–æ–Ω—Ç–∞–∫—Ç—ã:\nüìû +7 (913) 961-8780\n‚úâ warhale40x@gmail.com\nGitHub: https://github.com/Lorgar40k"
}

keyboard = [
    ["–ù–∞–≤—ã–∫–∏", "–û–ø—ã—Ç"],
    ["–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", "–ö–æ–Ω—Ç–∞–∫—Ç—ã"]
]
reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –∫—Ä—É—Ç–µ—Ü–∫–∏–π –∞–π—Ç–∏—à–Ω—ã–π –±–æ—Ç –ê–ª–µ–∫—Å–µ—è –ì—Ä–∏–≥–æ—Ä—å–µ–≤–∏—á–∞.\n\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:",
        reply_markup=reply_markup
    )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    text = update.message.text.lower()

    if "–Ω–∞–≤—ã–∫" in text:
        await update.message.reply_text(TEXTS["skills"])
    elif "–æ–ø—ã—Ç" in text:
        await update.message.reply_text(TEXTS["experience"])
    elif "–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ" in text:
        await update.message.reply_text(TEXTS["education"])
    elif "–∫–æ–Ω—Ç–∞–∫—Ç" in text:
        await update.message.reply_text(TEXTS["contacts"])
    else:
        await update.message.reply_text(
            "–ò–∑–≤–∏–Ω–∏, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ."
        )

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π

    app.run_polling()

if __name__ == '__main__':
    main()
